<launch>
  <arg name="gpu" default="0"/>

  <arg name="info" default="/remote/head_rgbd_sensor/rgb/camera_info" />
  <arg name="input_image" default="/remote/head_rgbd_sensor/rgb/image_rect_color" />
  <arg name="input_label" default="/mask_rcnn_instance_segmentation_fridge/output/label_cls" />
  <arg name="input_cloud" default="/remote/head_rgbd_sensor/depth_registered/points" />
  <arg name="input_labels" default="/mask_rcnn_instance_segmentation_fridge/output/labels" />

  <arg name="transform_zed_pointcloud" default="false" />
  <arg name="score_thresh" default="0.75"/>
  <arg name="eco_mode" default="false"/>
  <arg name="visualize" default="false" />
  <arg name="thresh" default="0.2" />

  <!-- <node name="pc_transformer" -->
  <!--       pkg="nodelet" type="nodelet" -->
  <!--       args="standalone jsk_pcl/TfTransformCloud" -->
  <!--       output="screen" > -->
  <!--   <remap from="~input" to="/zed/point_cloud/cloud_registered" /> -->
  <!--   <rosparam> -->
  <!--     target_frame_id: /zed_depth_camera -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <node name="mask_rcnn_instance_segmentation_fridge"
        pkg="jsk_perception" type="mask_rcnn_instance_segmentation.py"
        clear_params="true">
    <remap from="~input" to="$(arg input_image)" />
    <rosparam command="load"
              file="/home/nakaotatsuya/train_data/20211224-153632/fg_class_names.yaml" />
    <rosparam subst_value="true">
      pretrained_model: /home/nakaotatsuya/train_data/20211224-153632/snapshot_model.npz
      gpu: $(arg gpu)
    </rosparam>
  </node>

  <group ns="mask_rcnn_instance_segmentation_fridge" >
    <node name="republish"
          pkg="image_transport" type="republish"
          args="raw compressed">
      <remap from="in" to="output/viz" />
      <remap from="out" to="output/viz" />
    </node>
  </group>

  <node name="instance_cluster_point_indices_decomposer_fridge"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="$(arg input_cloud)" />
    <remap from="~target" to="/mask_rcnn_instance_segmentation_fridge/output/cluster_indices" />
    <rosparam>
      align_boxes: true
      align_boxes_with_plane: false
      approximate_sync: true
      queue_size: 100
      target_frame_id: map
      sort_by: input_indices
    </rosparam>
  </node>

  <node name="multi_euclidean_clustering_fridge"
        pkg="neatness_estimator" type="multi_euclidean_clustering"
        output="screen">
    <remap from="~input_cluster_indices" to="/instance_cluster_point_indices_decomposer_fridge/cluster_indices" />
    <remap from="~input_point_cloud" to="$(arg input_cloud)" />
    <remap from="~input_instance_labels" to="$(arg input_labels)" />
    <rosparam subst_value="true">
      voxel_thresh: 0.005
      cluster_tolerance: 0.008
      min_cluster: 100
      max_cluster: 25000
      approximate_sync_: false
    </rosparam>
 </node>

  <node name="multi_euclidean_cluster_point_indices_decomposer_fridge"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer">
    <remap from="~input" to="$(arg input_cloud)" />
    <remap from="~target" to="/multi_euclidean_clustering_fridge/output_indices" />
    <rosparam>
      align_boxes: true
      align_boxes_with_plane: false
      approximate_sync: false
      queue_size: 100
      target_frame_id: base_link
      sort_by: input_indices
    </rosparam>
  </node>


</launch>
